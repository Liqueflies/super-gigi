// -----------------------------------------------------------------------------
// WE WILL GENERATE STATIC CSS CLASSES.
// WE WOULD PREFER THE MIXINS VERSION, BUT NOT IN EVERY PROJECT
// YOU CAN HAVE PRECOMPILERS...
// -----------------------------------------------------------------------------
// If you don't want to use classes we will generate placeholders
// that you can use like that:
// .class
//   @extend %row
// -----------------------------------------------------------------------------

$type: if($use-classes, '.', '%');

// Row classes generator
@mixin row-generate-classes($query, $separator: '-') {
  $class-prefix: #{$type}#{$query}#{$separator} !global;

  @if $use-flex {
    // row modificators
    &#{$class-prefix}top {
      align-items: flex-start;
    }

    &#{$class-prefix}middle {
      align-items: center;
    }

    &#{$class-prefix}bottom {
      align-items: flex-end;
    }

    &#{$class-prefix}baseline {
      align-items: baseline;
    }

    &#{$class-prefix}stretch {
      align-items: stretch;
    }

    &#{$class-prefix}start {
      justify-content: flex-start;
    }

    &#{$class-prefix}center {
      justify-content: center;
    }

    &#{$class-prefix}end {
      justify-content: flex-end;
    }

    &#{$class-prefix}around {
      justify-content: space-around;
    }

    &#{$class-prefix}between {
      justify-content: space-between;
    }

    &#{$class-prefix}horizontal {
      flex-direction: if($grid-start == left, row, row-reverse);
    }

    &#{$class-prefix}horizontal-reverse {
      flex-direction: if($grid-start == left, row-reverse, row);
    }

    &#{$class-prefix}vertical {
      flex: 1;
      flex-direction: column;
    }

    &#{$class-prefix}vertical-reverse {
      flex: 1;
      flex-direction: column-reverse;
    }

    &#{$class-prefix}single-line {
      flex-flow: nowrap;
    }
  }
}

// Column classes generator
@mixin column-generate-classes($query, $separator: '-') {
  $class-prefix: #{$type}#{$query}#{$separator} !global;

  //column modificators
  @if $use-flex and $use-classes {
    &#{$class-prefix}collapse {
      padding: 0;
    }

    &#{$class-prefix}top {
      align-self: flex-start;
    }

    &#{$class-prefix}middle {
      align-self: center;
    }

    &#{$class-prefix}bottom {
      align-self: flex-end;
    }

    &#{$class-prefix}baseline {
      align-self: baseline;
    }

    &#{$class-prefix}stretch {
      align-self: stretch;
    }

    &#{$class-prefix}auto {
      flex: 1 1 0%;
      width: auto;
    }

    &#{$class-prefix}auto-reset {
      flex: 0 0 auto;
    }
  }

  &#{$type}auto {
    @include grid-column($width: ($query: auto), $global: null);
  }

  @for $i from 0 through $grid-columns {
    &#{$class-prefix}#{$i} {
      @include grid-column($width: ($query: $i), $global: null);
    }

    &#{$class-prefix}offset-#{$i} {
      @include grid-column($offset: ($query: $i), $width: null, $global: null);
    }

    &#{$class-prefix}push-#{$i} {
      @include grid-column($push: ($query: $i), $width: null, $global: null);
    }

    &#{$class-prefix}pull-#{$i} {
      @include grid-column($pull: ($query: $i), $width: null, $global: null);
    }

    @if $use-flex {
      &#{$class-prefix}order-#{$i} {
        @include grid-column($order: $i, $width: null, $global: null);
      }
    }
  }
}

// -----------------------------------------------------------------------------
// ROW GENERATOR CLASSES
// -----------------------------------------------------------------------------

@if $use-classes or $use-placeholders {
  #{$type}#{$row-name} {
    @include grid-row(false);

    #{$type}#{$row-name} {
      margin: 0 (-$column-gutter / 2);
      width: auto;
    }

    @include row-generate-classes('', '');

    @each $query, $breakpoint in $breakpoints {
      @include media-query($query) {
        @include row-generate-classes(#{$query});
      }


      // Generate placeholders for dryer
      @if $use-classes == false {
        $eq-grid: if($eq-grid, false, true) !global;
        @include media-query($query) {
          @include row-generate-classes(#{$query});
        }
        $eq-grid: if($eq-grid, true, false) !global;
      }

    }
  }
}


// -----------------------------------------------------------------------------
// COLUMN GENERATOR CLASSES
// -----------------------------------------------------------------------------

@if $use-classes or $use-placeholders {
  #{$type}#{$column-name} {
    @include grid-column;

    @each $query, $breakpoint in $breakpoints {
      @include media-query($query) {
        @include column-generate-classes(#{$query});
      }

      // Generate placeholders for dryer
      @if $use-classes == false {
        $eq-grid: if($eq-grid, false, true) !global;
        @include media-query($query) {
          @include column-generate-classes(#{$query});
        }
        $eq-grid: if($eq-grid, true, false) !global;
      }
    }
  }
}

