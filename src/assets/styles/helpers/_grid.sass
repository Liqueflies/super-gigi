// With OW-grid you have three choises of use
// You can use mixins (preferred ways)
// You can use placeholder (the dry way, less weight if you don't use gzip)
// YOu can use precompiled classes, like foundation or bootstrap.

// Settings
$row-width: rem-calc(1920) !default
$column-gutter: rem-calc(30) !default
$grid-columns: 12 !default
$use-classes: true !default
$use-placeholder: true !default
$row-name: row !default
$column-name: column !default
$grid-start: left
$grid-end: right

// Row Mixin
=grid-row($nested: false, $vertical: false)
  display: flex
  flex-wrap: wrap
  flex-grow: 1
  margin: 0 auto
  @if $vertical
    flex-direction: column
  @if $nested
    width: auto
    margin: 0 (-$column-gutter / 2)
  @else
    max-width: $row-width

// Grid space calculator

=grid-space($property: width, $attr: 'auto')
  @if $attr == 'auto'
    #{$property}: auto

  @else if length($attr) == 1
    #{$property}: unquote((nth($attr, 1) / $grid-columns * 100) + '%')

  @else if length($attr) == 3 and nth($attr, 2) == "of"
    #{$property}: unquote((nth($attr, 1) / nth($attr, 3) * 100) + '%')

  @else
    @each $query, $value in $attr
      +media-query($query)
        @if $value == auto
          #{$property}: auto
        @else
          #{$property}: unquote(($value / $grid-columns * 100) + '%')

// Column Mixin
=grid-column($width: 'auto', $collapse: null, $global: true, $push: null, $pull: null)

  @if $global != null 
    display: flex
    flex-grow: 1

  @if $width != null
    +grid-space(width, $width)

  @if $push != null
    position: relative
    #{$grid-end}: auto
    +grid-space($grid-start, $push)




  @if $collapse == false
    padding: 0 $column-gutter / 2


// We will generate static css classes.
// We would prefer the mixins version, but not in every project
// you can have precompilers...

// If you prefer you can use sass placeholder,
// .class
//   @extend %row
//   @extend %row%top

@if $use-classes or $use-placeholder
  @if $use-classes
    $type: "."
  @else
    $type: "%"

  // Row classes generator
  =row-generate-classes($class-prefix: "")
    /* #{$class-prefix} Breakpoint */
    $class-prefix: str-insert($class-prefix, $type, 1)

    // row modificators
    &#{$class-prefix}top
      align-items: flex-start
    &#{$class-prefix}middle
      align-items: center
    &#{$class-prefix}bottom
      align-items: flex-end
    &#{$class-prefix}baseline
      align-items: baseline
    &#{$class-prefix}stretch
      align-items: stretch

    &#{$class-prefix}start
      justify-content: flex-start
    &#{$class-prefix}center
      justify-content: center
    &#{$class-prefix}end
      justify-content: flex-end
    &#{$class-prefix}around
      justify-content: space-around
    &#{$class-prefix}between
      justify-content: space-between

    &#{$class-prefix}horizontal
      flex-direction: row
    &#{$class-prefix}horizontal-reverse
      flex-direction: row-reverse
    &#{$class-prefix}vertical
      flex-direction: column
    &#{$class-prefix}vertical-reverse
      flex-direction: column-reverse

    &#{$class-prefix}single-line
      flex-flow: nowrap

  // Column classes generator
  =column-generate-classes($class-prefix: "")
    $class-prefix: str-insert($class-prefix, $type, 1)

    //column modificators
    &#{$class-prefix}collapse
      padding: 0
    &#{$class-prefix}top
      align-self: flex-start
    &#{$class-prefix}middle
      align-self: center
    &#{$class-prefix}bottom
      align-self: flex-end
    &#{$class-prefix}baseline
      align-self: baseline
    &#{$class-prefix}stretch
      align-self: stretch
    &#{$class-prefix}auto
      width: auto
      flex: 1

    @for $i from 0 through $grid-columns
      &#{$class-prefix}#{$i}
        +grid-column($width: ($i of $grid-columns), $global: null)
      &#{$class-prefix}push-#{$i}
        +grid-column($push: ($i of $grid-columns), $global: null, $width: null)




  // ROW GENERATOR
  #{$type}#{$row-name}
    +grid-row
    #{$type}#{$row-name}
      width: auto
      margin: 0 (-$column-gutter / 2)
    @each $query, $breakpoint in $breakpoints
      @if index(map-keys($breakpoints), $query) == 1
        +row-generate-classes
      @else
        +media-query($query)
          +row-generate-classes(#{$query}-)

  // COLUMN GENERATOR
  #{$type}#{$column-name}
    +grid-column
    @each $query, $breakpoint in $breakpoints
      @if index(map-keys($breakpoints), $query) == 1
        +column-generate-classes
      @else
        +media-query($query)
          +column-generate-classes($class-prefix: #{$query}-)








// FOR INFO ABOUT EQJS https://github.com/Snugug/eq.js
@if $eq-grid
  // Element Query Setting String
  $eq-setting-string: ()
  @each $eq-name, $eq-value in $breakpoints
    $tmp: $eq-name
    $tmp: str-insert($tmp, #{unquote(": ")}, str-length($tmp)+1)
    $tmp: str-insert($tmp, #{remove-unit($eq-value)}, str-length($tmp)+1)
    $eq-setting-string: append($eq-setting-string, $tmp, comma)

  // The element on we'll add eqjs javascript
  .widget
    &:before
      display: none
      content: '#{inspect($eq-setting-string)}'
  html:before
    display: none
    content: '.widget, .widgets'

