// - CONFIGURATION - //

// Global
$min-unit: em-calc(1) !default
$eq-grid: false !default
$row-width: rem-calc(1920) !default
$column-gutter: rem-calc(30) !default
$grid-columns: 12 !default
$use-classes: false !default
$use-placeholder: false !default

// - MEDIAQUERIES SETTINGS
// Screens
$screen: "only screen" !default
$landscape: "#{$screen} and (orientation: landscape)" !default
$portrait: "#{$screen} and (orientation: portrait)" !default

// Widths
$xxsmall: 0em !default
$xsmall:  em-calc(321) !default
$small:   em-calc(481) !default
$medium:  em-calc(721) !default
$large:   em-calc(1025) !default
$xlarge:  em-calc(1281) !default
$xxlarge: em-calc(1441) !default

// Used Media Queries (the arrays must have same length)
$breakpoint-names: xxsmall xsmall small medium large xlarge xxlarge !default
$breakpoint-values: $xxsmall, $xsmall, $small, $medium, $large, $xlarge, $xxlarge !default
@if length($breakpoint-names) != length($breakpoint-values)
  @warn "$breakpoint-names and $breakpoint-values MUST have same length"

// Element Query Setting String
$eq-setting-string: ()
@for $i from 1 through length($breakpoint-names)
  $eq-setting-value: remove-unit(px-calc(nth($breakpoint-values, $i)))
  $eq-active-string: #{nth($breakpoint-names, $i)}
  $eq-active-string: str-insert($eq-active-string, #{unquote(": ")}, str-length($eq-active-string)+1)
  $eq-active-string: str-insert($eq-active-string, #{$eq-setting-value}, str-length($eq-active-string)+1)
  $eq-setting-string: append($eq-setting-string, $eq-active-string, comma)


// - MEDIAQUERY MIXINS - //
// - Generate Media Query
=media-query($query: xxsmall, $only: false, $eq-grid: $eq-grid)
  @if $eq-grid
    @if $only
      [data-eq-state="#{$query}"] &
        @content
    @else
      [data-eq-state$="#{$query}"] &
        @content
      @each $current-query-name in $breakpoint-names
        @if index($breakpoint-names, $query) < index($breakpoint-names, $current-query-name)
          @at-root
            [data-eq-state$="#{$current-query-name}"]
              @extend [data-eq-state$="#{$query}"] &
  @else
    $current-break-point: nth($breakpoint-values, index($breakpoint-names, $query))
    @if $only
      @if index($breakpoint-names, $query) == length($breakpoint-values)
        $next-break-point: 99999999em
      @else
        $next-break-point: nth($breakpoint-values, index($breakpoint-names, $query)+1)-$min-unit
      @media #{$screen} and (min-width: #{$current-break-point}) and (max-width: #{$next-break-point})
        @content

    @else
      @media #{$screen} and (min-width: #{$current-break-point})
        @content

// Row Mixin
=grid-row($nested: false)
  display: flex
  flex-wrap: wrap
  flex-grow: 1
  margin: 0 auto
  @if $nested
    width: 100%
    margin: 0 (-$column-gutter / 2)
  @else
    max-width: $row-width

// Row Placeholder and class
@if $use-placeholder
  %row
    +grid-row
  %row-nested
    +grid-row(true)

@if $use-classes
  .row
    +grid-row
    .row
      +grid-row(true)

// Column Mixin
=grid-column($width: 'auto', $collapse: false)
  display: flex

  @if $collapse == false
    padding: 0 $column-gutter / 2

  @if $width == 'auto'
    width: auto
    flex-grow: 1

  @else if length($width) == 1
    width: unquote((nth($width, 1) / $grid-columns * 100) + '%')

  @else if length($width) == 3 and nth($width, 2) == "of"
    width: unquote((nth($width, 1) / nth($width, 3) * 100) + '%')

  @else
    @each $query, $value in $width
      +media-query($query)
        @if $value == auto
          width: auto
          flex-grow: 1
        @else
          width: unquote(($value / $grid-columns * 100) + '%')



// The element on we'll add eqjs javascript
.widget
  &:before
    display: none
    content: '#{inspect($eq-setting-string)}'
html:before
  display: none
  content: '.widget, .widgets'
